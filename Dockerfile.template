FROM resin/%%RESIN_MACHINE_NAME%%-debian:jessie

#switch on systemd init system in container
ENV INITSYSTEM on

# Install ROS
RUN locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8

RUN apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 0xB01FA116

RUN echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list

RUN apt-get -q update && apt-get install -yq --no-install-recommends \
	build-essential \
	python-smbus \
	&& apt-get clean && rm -rf /var/lib/apt/lists/*

# install bootstrap tools
RUN apt-get update && apt-get install --no-install-recommends -y \
    python-rosdep \
    python-rosinstall \
    python-vcstools \
    && rm -rf /var/lib/apt/lists/*

# bootstrap rosdep
RUN rosdep init \
    && rosdep update

# install ros packages
ENV ROS_DISTRO kinetic
RUN apt-get update && apt-get install -y \
    ros-kinetic-ros-core=1.3.0-0* \
		ros-kinetic-ros-base=1.3.0-0* \
		ros-kinetic-robot=1.3.0-0* \
    && rm -rf /var/lib/apt/lists/*

# setup entrypoint
COPY ./docker_entrypoint.sh /

ENTRYPOINT ["/docker_entrypoint.sh"]


COPY ./catkin_ws /catkin_ws
WORKDIR /catkin_ws

RUN /docker_entrypoint.sh catkin_make install -DCMAKE_INSTALL_PREFIX=/opt/ros/kinetic/

CMD ["roslaunch", "spare_parts", "spare_parts.launch"]
